{
  "Header": {
    "_": [
      " Current file requires a vsSolutionBuildEvent engine.",
      " Free plugin for Visual Studio or MSBuild Tools:",
      "  * http://visualstudiogallery.msdn.microsoft.com/0d1dbfd7-ed8a-40af-ae39-281bfeca2334/",
      "  * http://vssbe.r-eg.net",
      " Feedback: entry.reg@gmail.com"
    ],
    "Compatibility": "0.9"
  },
  "Components": [
    {
      "ClassName": "InternalComponent",
      "Enabled": true
    },
    {
      "ClassName": "UserVariableComponent",
      "Enabled": true
    },
    {
      "ClassName": "OWPComponent",
      "Enabled": true
    },
    {
      "ClassName": "NuGetComponent",
      "Enabled": true
    },
    {
      "ClassName": "FunctionComponent",
      "Enabled": true
    },
    {
      "ClassName": "FileComponent",
      "Enabled": true
    },
    {
      "ClassName": "DTEComponent",
      "Enabled": true
    },
    {
      "ClassName": "BuildComponent",
      "Enabled": true
    },
    {
      "ClassName": "SevenZipComponent",
      "Enabled": true
    },
    {
      "ClassName": "ConditionComponent",
      "Enabled": true
    },
    {
      "ClassName": "MSBuildComponent",
      "Enabled": true
    },
    {
      "ClassName": "CommentComponent",
      "Enabled": true
    }
  ],
  "PreBuild": [
    {
      "Enabled": true,
      "Name": "RestorePkg",
      "Caption": "To restore packages - nuget etc.",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[\" \n    To restore packages via GetNuTool\n    https://github.com/NuGet/Home/issues/522\n    https://github.com/NuGet/Home/issues/1521\n\"]\n#[NuGet gnt.raw(\"/p:ngconfig=\\\".gnt/packages.config\\\"\")]",
        "Command__": [
          "#[\" ",
          "    To restore packages via GetNuTool",
          "    https://github.com/NuGet/Home/issues/522",
          "    https://github.com/NuGet/Home/issues/1521",
          "\"]",
          "#[NuGet gnt.raw(\"/p:ngconfig=\\\".gnt/packages.config\\\"\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "Definitions",
      "Caption": "Prepares data",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[\"\n    Prepares data - versions, revBuild & information from git\n\"]\n\n#[var tStart    = $([System.DateTime]::Parse(\"2015/10/19\").ToBinary())]\n#[var tNow      = $([System.DateTime]::UtcNow.Ticks)]\n#[var revBuild  = $([System.TimeSpan]::FromTicks($([MSBuild]::Subtract($(tNow), $(tStart)))).TotalMinutes.ToString(\"0\"))]\n\n#[var tplVersion = #[File get(\"Version.tpl\")]]\n\n#[var pDir  = vsCommandEvent/]\n#[var numCE = #[File get(\".version\")]]",
        "Command__": [
          "#[\"",
          "    Prepares data - versions, revBuild & information from git",
          "\"]",
          "",
          "#[var tStart    = $([System.DateTime]::Parse(\"2015/10/19\").ToBinary())]",
          "#[var tNow      = $([System.DateTime]::UtcNow.Ticks)]",
          "#[var revBuild  = $([System.TimeSpan]::FromTicks($([MSBuild]::Subtract($(tNow), $(tStart)))).TotalMinutes.ToString(\"0\"))]",
          "",
          "#[var tplVersion = #[File get(\"Version.tpl\")]]",
          "",
          "#[var pDir  = vsCommandEvent/]",
          "#[var numCE = #[File get(\".version\")]]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "Version",
      "Caption": "Updating version",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[( #[File exists.directory(\".git\")] && #[File exists.file(\"git.exe\", true)] )\n{\n    #[var branchSha1        = #[File sout(\"git\", \"rev-parse --short HEAD\")]]\n    #[var branchName        = #[File sout(\"git\", \"rev-parse --abbrev-ref HEAD\")]]\n    #[var branchRevCount    = #[File sout(\"git\", \"rev-list HEAD --count\")]]\n    \n    #[var csVersion = $(tplVersion.Replace(%branchName%, \"$(branchName)\").Replace(%branchSha1%, \"$(branchSha1)\").Replace(%branchRevCount%, \"$(branchRevCount)\"))]\n    \n    #[($(branchName) == \"HEAD\") {\n        #[var branchName = $(APPVEYOR_REPO_BRANCH)]\n    }]\n}\nelse {\n    #[var csVersion = $(tplVersion.Replace(%branchName%, \"-\").Replace(%branchSha1%, \"-\").Replace(%branchRevCount%, \"-\"))]\n}]\n\n#[var cs = $(csVersion.Replace(%Version%, \"$(numCE.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \"\"))]\n#[var cs = $(cs.Replace(%VersionRevString%, \"$(numCE).$(revBuild)\").Replace(%VersionString%, \"$(numCE)\"))]\n#[File write(\"#[var pDir]Version.cs\"):#[var cs]]\n\n\n#[\"\n    .vsixmanifest\n\"]\n\n#[($(Configuration) ~= \"_with_revision\" || $(Configuration) ~= \"CI_\") {\n    #[var numCE = #[var numCE].#[var revBuild]]\n}]\n#[File replace.Regexp(\"$(pDir)/source.extension.vsixmanifest\", \"<Version>[0-9.]+</Version>\", \"<Version>$(numCE)</Version>\")]",
        "Command__": [
          "#[( #[File exists.directory(\".git\")] && #[File exists.file(\"git.exe\", true)] )",
          "{",
          "    #[var branchSha1        = #[File sout(\"git\", \"rev-parse --short HEAD\")]]",
          "    #[var branchName        = #[File sout(\"git\", \"rev-parse --abbrev-ref HEAD\")]]",
          "    #[var branchRevCount    = #[File sout(\"git\", \"rev-list HEAD --count\")]]",
          "    ",
          "    #[var csVersion = $(tplVersion.Replace(%branchName%, \"$(branchName)\").Replace(%branchSha1%, \"$(branchSha1)\").Replace(%branchRevCount%, \"$(branchRevCount)\"))]",
          "    ",
          "    #[($(branchName) == \"HEAD\") {",
          "        #[var branchName = $(APPVEYOR_REPO_BRANCH)]",
          "    }]",
          "}",
          "else {",
          "    #[var csVersion = $(tplVersion.Replace(%branchName%, \"-\").Replace(%branchSha1%, \"-\").Replace(%branchRevCount%, \"-\"))]",
          "}]",
          "",
          "#[var cs = $(csVersion.Replace(%Version%, \"$(numCE.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \"\"))]",
          "#[var cs = $(cs.Replace(%VersionRevString%, \"$(numCE).$(revBuild)\").Replace(%VersionString%, \"$(numCE)\"))]",
          "#[File write(\"#[var pDir]Version.cs\"):#[var cs]]",
          "",
          "",
          "#[\"",
          "    .vsixmanifest",
          "\"]",
          "",
          "#[($(Configuration) ~= \"_with_revision\" || $(Configuration) ~= \"CI_\") {",
          "    #[var numCE = #[var numCE].#[var revBuild]]",
          "}]",
          "#[File replace.Regexp(\"$(pDir)/source.extension.vsixmanifest\", \"<Version>[0-9.]+</Version>\", \"<Version>$(numCE)</Version>\")]"
        ]
      }
    }
  ],
  "PostBuild": [
    {
      "Enabled": true,
      "Name": "Tests",
      "Caption": "Run all tests for release configurations",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": [
          {
            "Project": "vsSolutionBuildEvent",
            "Order": "After"
          }
        ]
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[($([System.Convert]::ToInt32(\"$(VisualStudioVersion.Replace('.', ''))\")) < 120) {\n    #[($(Configuration) ^= \"Release\" && !$(Configuration) ^= \"CI_\") {\n        #[DTE exec: Test.RunAllTestsInSolution]\n    }]\n}]",
        "Command__": [
          "#[($([System.Convert]::ToInt32(\"$(VisualStudioVersion.Replace('.', ''))\")) < 120) {",
          "    #[($(Configuration) ^= \"Release\" && !$(Configuration) ^= \"CI_\") {",
          "        #[DTE exec: Test.RunAllTestsInSolution]",
          "    }]",
          "}]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "Definitions",
      "Caption": "Definitions for POST",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[var appzip    = $(SolutionDir)bin/7z/7za.exe]\n#[var odir      = $(SolutionDir)bin/Releases/]\n#[var cfg       = #[($(Configuration) ~= \"Release\"){Release}else{Debug}]]\n#[var cfgFull   = $(Configuration)]\n#[var vsixLib   = $(SolutionDir)VsixLib\\bin\\]\n\n#[var netStamp      = net$(TargetFrameworkVersion.Replace(\".\", \"\").Replace(\"v\", \"\"))]\n#[var netVerString  = $(TargetFrameworkVersion)]\n#[var msbuildver    = v$(MSBuildToolsVersion)]\n\n\n#[IO delete.directory(\"$(odir)\", true)]\n#[IO copy.directory(\"\", \"$(odir)\", true)]",
        "Command__": [
          "#[var appzip    = $(SolutionDir)bin/7z/7za.exe]",
          "#[var odir      = $(SolutionDir)bin/Releases/]",
          "#[var cfg       = #[($(Configuration) ~= \"Release\"){Release}else{Debug}]]",
          "#[var cfgFull   = $(Configuration)]",
          "#[var vsixLib   = $(SolutionDir)VsixLib\\bin\\]",
          "",
          "#[var netStamp      = net$(TargetFrameworkVersion.Replace(\".\", \"\").Replace(\"v\", \"\"))]",
          "#[var netVerString  = $(TargetFrameworkVersion)]",
          "#[var msbuildver    = v$(MSBuildToolsVersion)]",
          "",
          "",
          "#[IO delete.directory(\"$(odir)\", true)]",
          "#[IO copy.directory(\"\", \"$(odir)\", true)]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "ReleaseNotes",
      "Caption": "Release notes",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[File write(\"$(odir)/Release_notes.txt\"):This assembled from:\n\n* Configuration:   '#[var cfgFull]' (Folders: #[var cfg])\n* .NET version:     #[var netVerString];\n* MSBuild Tools:    #[var msbuildver];\n* Build number:     #[var revBuild];\n* Branch Sha1:      #[var branchSha1];\n* Branch Name:      #[var branchName];\n* Branch revCount:  #[var branchRevCount];\n------------------------------------------\n\nVersions:\n\n* The 'vsCommandEvent': v#[var numCE];\n\n------------------------------------------\n         Generated by vsSolutionBuildEvent\n------------------------------------------\n\nhttp://vssbe.r-eg.net\nhttp://vssbe.r-eg.net/Changelist/\nhttp://vssbe.r-eg.net/Downloads/\nhttp://visualstudiogallery.msdn.microsoft.com/0d1dbfd7-ed8a-40af-ae39-281bfeca2334/\n]",
        "Command__": [
          "#[File write(\"$(odir)/Release_notes.txt\"):This assembled from:",
          "",
          "* Configuration:   '#[var cfgFull]' (Folders: #[var cfg])",
          "* .NET version:     #[var netVerString];",
          "* MSBuild Tools:    #[var msbuildver];",
          "* Build number:     #[var revBuild];",
          "* Branch Sha1:      #[var branchSha1];",
          "* Branch Name:      #[var branchName];",
          "* Branch revCount:  #[var branchRevCount];",
          "------------------------------------------",
          "",
          "Versions:",
          "",
          "* The 'vsCommandEvent': v#[var numCE];",
          "",
          "------------------------------------------",
          "         Generated by vsSolutionBuildEvent",
          "------------------------------------------",
          "",
          "http://vssbe.r-eg.net",
          "http://vssbe.r-eg.net/Changelist/",
          "http://vssbe.r-eg.net/Downloads/",
          "http://visualstudiogallery.msdn.microsoft.com/0d1dbfd7-ed8a-40af-ae39-281bfeca2334/",
          "]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "PackVSCE",
      "Caption": "Pack 'vsSCE'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[IO copy.file(\"$(pDir)bin\\$(cfg)\\vsCommandEvent.vsix\", \"$(odir)vsCommandEvent_v$(numCE)_[$(branchSha1)][$(netStamp)].vsix\", true)]",
        "Command__": [
          "#[IO copy.file(\"$(pDir)bin\\$(cfg)\\vsCommandEvent.vsix\", \"$(odir)vsCommandEvent_v$(numCE)_[$(branchSha1)][$(netStamp)].vsix\", true)]"
        ]
      }
    }
  ],
  "CancelBuild": [],
  "WarningsBuild": [],
  "ErrorsBuild": [],
  "OWPBuild": [],
  "Transmitter": [],
  "CommandEvent": [],
  "Logging": [],
  "SlnOpened": [],
  "SlnClosed": []
}