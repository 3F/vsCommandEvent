{
  "Header": {
    "_": [
      " Current file requires a vsSolutionBuildEvent engine.",
      " Free plugin for Visual Studio or MSBuild Tools:",
      "  * http://visualstudiogallery.msdn.microsoft.com/0d1dbfd7-ed8a-40af-ae39-281bfeca2334/",
      "  * http://vssbe.r-eg.net",
      " Feedback: entry.reg@gmail.com"
    ],
    "Compatibility": "0.9"
  },
  "Components": [
    {
      "ClassName": "InternalComponent",
      "Enabled": true
    },
    {
      "ClassName": "UserVariableComponent",
      "Enabled": true
    },
    {
      "ClassName": "TryComponent",
      "Enabled": true
    },
    {
      "ClassName": "OWPComponent",
      "Enabled": true
    },
    {
      "ClassName": "NuGetComponent",
      "Enabled": true
    },
    {
      "ClassName": "FunctionComponent",
      "Enabled": true
    },
    {
      "ClassName": "FileComponent",
      "Enabled": true
    },
    {
      "ClassName": "DTEComponent",
      "Enabled": true
    },
    {
      "ClassName": "BuildComponent",
      "Enabled": true
    },
    {
      "ClassName": "SevenZipComponent",
      "Enabled": true
    },
    {
      "ClassName": "ConditionComponent",
      "Enabled": true
    },
    {
      "ClassName": "MSBuildComponent",
      "Enabled": true
    },
    {
      "ClassName": "CommentComponent",
      "Enabled": true
    }
  ],
  "PreBuild": [
    {
      "Enabled": true,
      "Name": "RestorePkg",
      "Caption": "To restore packages - nuget etc.",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[\" \n    To restore packages via GetNuTool\n    https://github.com/NuGet/Home/issues/522\n    https://github.com/NuGet/Home/issues/1521\n\"]\n#[NuGet gnt.raw(\"/p:ngconfig=\\\".gnt/packages.config\\\"\")]",
        "Command__": [
          "#[\" ",
          "    To restore packages via GetNuTool",
          "    https://github.com/NuGet/Home/issues/522",
          "    https://github.com/NuGet/Home/issues/1521",
          "\"]",
          "#[NuGet gnt.raw(\"/p:ngconfig=\\\".gnt/packages.config\\\"\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "Definitions",
      "Caption": "Prepares data",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[\"\n    Prepares data - versions, revBuild & information from git\n\"]\n\n#[var tStart    = $([System.DateTime]::Parse(\"2016/02/02\").ToBinary())]\n#[var tNow      = $([System.DateTime]::UtcNow.Ticks)]\n#[var revBuild  = $([System.TimeSpan]::FromTicks($([MSBuild]::Subtract($(tNow), $(tStart)))).TotalMinutes.ToString(\"0\"))]\n\n#[var tplVersion = #[File get(\"Version.tpl\")]]\n\n#[var pDir          = vsSolutionBuildEvent/]\n#[var pDirBridge    = Bridge/]\n#[var pDirCIM       = CI.MSBuild/]\n#[var pDirDevenv    = Devenv\\]\n#[var pDirProvider  = Provider/]\n\n#[var numSBE        = #[File get(\".version\")]]\n#[var numBridge     = #[File get(\"#[var pDirBridge].version\")]]\n#[var numCIM        = #[File get(\"#[var pDirCIM].version\")]]\n#[var numDevenv     = #[File get(\"#[var pDirDevenv].version\")]]\n#[var numProvider   = #[File get(\"#[var pDirProvider].version\")]]\n\n#[\" the 0 number is reserved for patches from external assemblies /see AssemblyInfo \"]\n\n#[var num0Bridge     = #[var numBridge].0]\n#[var num0CIM        = #[var numCIM].0]\n#[var num0Devenv     = #[var numDevenv].0]\n#[var num0Provider   = #[var numProvider].0]\n\n#[var libCore       = #[var numSBE]]\n#[var libCoreInt    = $([System.Convert]::ToInt32(\"$(libCore.Replace('.', '0'))\"))]#[\" v0.12.5 -> 1205 \"]",
        "Command__": [
          "#[\"",
          "    Prepares data - versions, revBuild & information from git",
          "\"]",
          "",
          "#[var tStart    = $([System.DateTime]::Parse(\"2016/02/02\").ToBinary())]",
          "#[var tNow      = $([System.DateTime]::UtcNow.Ticks)]",
          "#[var revBuild  = $([System.TimeSpan]::FromTicks($([MSBuild]::Subtract($(tNow), $(tStart)))).TotalMinutes.ToString(\"0\"))]",
          "",
          "#[var tplVersion = #[File get(\"Version.tpl\")]]",
          "",
          "#[var pDir          = vsSolutionBuildEvent/]",
          "#[var pDirBridge    = Bridge/]",
          "#[var pDirCIM       = CI.MSBuild/]",
          "#[var pDirDevenv    = Devenv\\]",
          "#[var pDirProvider  = Provider/]",
          "",
          "#[var numSBE        = #[File get(\".version\")]]",
          "#[var numBridge     = #[File get(\"#[var pDirBridge].version\")]]",
          "#[var numCIM        = #[File get(\"#[var pDirCIM].version\")]]",
          "#[var numDevenv     = #[File get(\"#[var pDirDevenv].version\")]]",
          "#[var numProvider   = #[File get(\"#[var pDirProvider].version\")]]",
          "",
          "#[\" the 0 number is reserved for patches from external assemblies /see AssemblyInfo \"]",
          "",
          "#[var num0Bridge     = #[var numBridge].0]",
          "#[var num0CIM        = #[var numCIM].0]",
          "#[var num0Devenv     = #[var numDevenv].0]",
          "#[var num0Provider   = #[var numProvider].0]",
          "",
          "#[var libCore       = #[var numSBE]]",
          "#[var libCoreInt    = $([System.Convert]::ToInt32(\"$(libCore.Replace('.', '0'))\"))]#[\" v0.12.5 -> 1205 \"]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "Version",
      "Caption": "Updating version",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[( #[File exists.directory(\".git\")] && #[File exists.file(\"git.exe\", true)] )\n{\n    #[var branchSha1        = #[File sout(\"git\", \"rev-parse --short HEAD\")]]\n    #[var branchName        = #[File sout(\"git\", \"rev-parse --abbrev-ref HEAD\")]]\n    #[var branchRevCount    = #[File sout(\"git\", \"rev-list HEAD --count\")]]\n    \n    #[var csVersion = $(tplVersion.Replace(%branchName%, \"$(branchName)\").Replace(%branchSha1%, \"$(branchSha1)\").Replace(%branchRevCount%, \"$(branchRevCount)\"))]\n    \n    #[($(branchName) == \"HEAD\") {\n        #[var branchName = $(APPVEYOR_REPO_BRANCH)]\n    }]\n}\nelse {\n    #[var branchSha1 =-] #[var branchName =-] #[var branchRevCount =-]\n    #[var csVersion = $(tplVersion.Replace(%branchName%, \"-\").Replace(%branchSha1%, \"-\").Replace(%branchRevCount%, \"-\"))]\n}]\n\n\n#[\"\n    Updating version for 'vsSolutionBuildEvent'.\n    \n    Note:\n    * For getting the main project path, sample:\n                    #[var pDir = $($(ProjectDir:$(SolutionName)))]\n\"]\n\n#[var cs = $(csVersion.Replace(%Version%, \"$(numSBE.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \"\"))]\n#[var cs = $(cs.Replace(%VersionRevString%, \"$(numSBE).$(revBuild)\").Replace(%VersionString%, \"$(numSBE)\"))]\n#[File write(\"#[var pDir]Version.cs\"):#[var cs]]\n\n\n#[\"\n    .vsixmanifest\n\"]\n\n#[( $(Configuration) ^= \"CI_\" || $(Configuration) ~= \"_with_revision\" ) {\n    #[var numSBE = #[var numSBE].#[var revBuild]]\n}]\n#[File replace.Regexp(\"#[var pDir]/source.extension.vsixmanifest\", \"<Version>[0-9.]+</Version>\", \"<Version>#[var numSBE]</Version>\")]",
        "Command__": [
          "#[( #[File exists.directory(\".git\")] && #[File exists.file(\"git.exe\", true)] )",
          "{",
          "    #[var branchSha1        = #[File sout(\"git\", \"rev-parse --short HEAD\")]]",
          "    #[var branchName        = #[File sout(\"git\", \"rev-parse --abbrev-ref HEAD\")]]",
          "    #[var branchRevCount    = #[File sout(\"git\", \"rev-list HEAD --count\")]]",
          "    ",
          "    #[var csVersion = $(tplVersion.Replace(%branchName%, \"$(branchName)\").Replace(%branchSha1%, \"$(branchSha1)\").Replace(%branchRevCount%, \"$(branchRevCount)\"))]",
          "    ",
          "    #[($(branchName) == \"HEAD\") {",
          "        #[var branchName = $(APPVEYOR_REPO_BRANCH)]",
          "    }]",
          "}",
          "else {",
          "    #[var branchSha1 =-] #[var branchName =-] #[var branchRevCount =-]",
          "    #[var csVersion = $(tplVersion.Replace(%branchName%, \"-\").Replace(%branchSha1%, \"-\").Replace(%branchRevCount%, \"-\"))]",
          "}]",
          "",
          "",
          "#[\"",
          "    Updating version for 'vsSolutionBuildEvent'.",
          "    ",
          "    Note:",
          "    * For getting the main project path, sample:",
          "                    #[var pDir = $($(ProjectDir:$(SolutionName)))]",
          "\"]",
          "",
          "#[var cs = $(csVersion.Replace(%Version%, \"$(numSBE.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \"\"))]",
          "#[var cs = $(cs.Replace(%VersionRevString%, \"$(numSBE).$(revBuild)\").Replace(%VersionString%, \"$(numSBE)\"))]",
          "#[File write(\"#[var pDir]Version.cs\"):#[var cs]]",
          "",
          "",
          "#[\"",
          "    .vsixmanifest",
          "\"]",
          "",
          "#[( $(Configuration) ^= \"CI_\" || $(Configuration) ~= \"_with_revision\" ) {",
          "    #[var numSBE = #[var numSBE].#[var revBuild]]",
          "}]",
          "#[File replace.Regexp(\"#[var pDir]/source.extension.vsixmanifest\", \"<Version>[0-9.]+</Version>\", \"<Version>#[var numSBE]</Version>\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "VerProjects",
      "Caption": "Versions for subprojects",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[\" TODO: functions or templates (with delay of the evaluation)\n\n currently it can be like this:\n\n    #[var template =\n        ##[var box = \n            #[var cs = $$(...)]\n        ]\n    ]\n    #[var eval = #[var template]]\n    \n    however... it's inconvenient, not useful and unstable (not for all cases) ...\n\"]\n\n#[\"\n    Updating version for 'Bridge'.\n\"]\n\n#[var cs    = $(csVersion.Replace(%Version%, \"$(num0Bridge.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".Bridge\"))]\n#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0Bridge).$(revBuild)\").Replace(%VersionString%, \"$(num0Bridge)\"))]\n#[File write(\"#[var pDirBridge]Version.cs\"):#[var cs]]\n\n#[\"\n    Updating version for 'CI.MSBuild'.\n\"]\n\n#[var cs    = $(csVersion.Replace(%Version%, \"$(num0CIM.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".CI.MSBuild\"))]\n#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0CIM).$(revBuild)\").Replace(%VersionString%, \"$(num0CIM)\"))]\n#[File write(\"#[var pDirCIM]Version.cs\"):#[var cs]]\n\n#[\"\n    Updating version for 'Devenv'.\n\"]\n\n#[var cs    = $(csVersion.Replace(%Version%, \"$(num0Devenv.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".Devenv\"))]\n#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0Devenv).$(revBuild)\").Replace(%VersionString%, \"$(num0Devenv)\"))]\n#[File write(\"#[var pDirDevenv]Version.cs\"):#[var cs]]\n\n#[\"\n    Updating version for 'Provider'.\n\"]\n\n#[var cs    = $(csVersion.Replace(%Version%, \"$(num0Provider.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".Provider\"))]\n#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0Provider).$(revBuild)\").Replace(%VersionString%, \"$(num0Provider)\"))]\n#[File write(\"#[var pDirProvider]Version.cs\"):#[var cs]]",
        "Command__": [
          "#[\" TODO: functions or templates (with delay of the evaluation)",
          "",
          " currently it can be like this:",
          "",
          "    #[var template =",
          "        ##[var box = ",
          "            #[var cs = $$(...)]",
          "        ]",
          "    ]",
          "    #[var eval = #[var template]]",
          "    ",
          "    however... it's inconvenient, not useful and unstable (not for all cases) ...",
          "\"]",
          "",
          "#[\"",
          "    Updating version for 'Bridge'.",
          "\"]",
          "",
          "#[var cs    = $(csVersion.Replace(%Version%, \"$(num0Bridge.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".Bridge\"))]",
          "#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0Bridge).$(revBuild)\").Replace(%VersionString%, \"$(num0Bridge)\"))]",
          "#[File write(\"#[var pDirBridge]Version.cs\"):#[var cs]]",
          "",
          "#[\"",
          "    Updating version for 'CI.MSBuild'.",
          "\"]",
          "",
          "#[var cs    = $(csVersion.Replace(%Version%, \"$(num0CIM.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".CI.MSBuild\"))]",
          "#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0CIM).$(revBuild)\").Replace(%VersionString%, \"$(num0CIM)\"))]",
          "#[File write(\"#[var pDirCIM]Version.cs\"):#[var cs]]",
          "",
          "#[\"",
          "    Updating version for 'Devenv'.",
          "\"]",
          "",
          "#[var cs    = $(csVersion.Replace(%Version%, \"$(num0Devenv.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".Devenv\"))]",
          "#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0Devenv).$(revBuild)\").Replace(%VersionString%, \"$(num0Devenv)\"))]",
          "#[File write(\"#[var pDirDevenv]Version.cs\"):#[var cs]]",
          "",
          "#[\"",
          "    Updating version for 'Provider'.",
          "\"]",
          "",
          "#[var cs    = $(csVersion.Replace(%Version%, \"$(num0Provider.Replace('.', ', ')), $(revBuild)\").Replace(%namespace%, \".Provider\"))]",
          "#[var cs    = $(cs.Replace(%VersionRevString%, \"$(num0Provider).$(revBuild)\").Replace(%VersionString%, \"$(num0Provider)\"))]",
          "#[File write(\"#[var pDirProvider]Version.cs\"):#[var cs]]"
        ]
      }
    }
  ],
  "PostBuild": [
    {
      "Enabled": true,
      "Name": "Tests",
      "Caption": "Run all tests for release configurations",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": [
          {
            "Project": "vsSolutionBuildEvent",
            "Order": "After"
          }
        ]
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[($([System.Convert]::ToInt32(\"$(VisualStudioVersion.Replace('.', ''))\")) < 120) {\n    #[($(Configuration) ^= \"Release\" && !$(Configuration) ^= \"CI_\") {\n        #[DTE exec: Test.RunAllTestsInSolution]\n    }]\n}]",
        "Command__": [
          "#[($([System.Convert]::ToInt32(\"$(VisualStudioVersion.Replace('.', ''))\")) < 120) {",
          "    #[($(Configuration) ^= \"Release\" && !$(Configuration) ^= \"CI_\") {",
          "        #[DTE exec: Test.RunAllTestsInSolution]",
          "    }]",
          "}]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "Definitions",
      "Caption": "Definitions for POST",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[var odir      = $(SolutionDir)bin/Releases/]\n#[var cfg       = #[($(Configuration) ~= \"Release\"){Release}else{Debug}]]\n#[var cfgFull   = $(Configuration)]\n#[var CIMLib    = $(SolutionDir)CIMLib\\bin\\]\n\n#[\" #[var netStamp      = net$(TargetFrameworkVersion.Replace(\".\", \"\").Replace(\"v\", \"\"))] \"]\n#[var netStamp      = $(NetTargetVName:vsSolutionBuildEvent)]\n#[var netVerString  = $(TargetFrameworkVersion:vsSolutionBuildEvent)]\n#[var msbuildver    = v$(MSBuildToolsVersion)]\n\n#[IO delete.directory(\"$(odir)\", true)]\n#[IO copy.directory(\"\", \"$(odir)\", true)]",
        "Command__": [
          "#[var odir      = $(SolutionDir)bin/Releases/]",
          "#[var cfg       = #[($(Configuration) ~= \"Release\"){Release}else{Debug}]]",
          "#[var cfgFull   = $(Configuration)]",
          "#[var CIMLib    = $(SolutionDir)CIMLib\\bin\\]",
          "",
          "#[\" #[var netStamp      = net$(TargetFrameworkVersion.Replace(\".\", \"\").Replace(\"v\", \"\"))] \"]",
          "#[var netStamp      = $(NetTargetVName:vsSolutionBuildEvent)]",
          "#[var netVerString  = $(TargetFrameworkVersion:vsSolutionBuildEvent)]",
          "#[var msbuildver    = v$(MSBuildToolsVersion)]",
          "",
          "#[IO delete.directory(\"$(odir)\", true)]",
          "#[IO copy.directory(\"\", \"$(odir)\", true)]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "ReleaseNotes",
      "Caption": "Release notes",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[File write(\"$(odir)\\Release_notes.txt\"):This assembled from:\n\n* Configuration:   '#[var cfgFull]' (Folders: #[var cfg])\n* .NET version:     #[var netVerString];\n* MSBuild Tools:    #[var msbuildver];\n* Build number:     #[var revBuild];\n* Branch Sha1:      #[var branchSha1];\n* Branch Name:      #[var branchName];\n* Branch revCount:  #[var branchRevCount];\n------------------------------------------\n\nVersions:\n\n* The 'Bridge':                 v#[var numBridge];\n* The 'CI.MSBuild':             v#[var numCIM];\n* The 'Devenv':                 v#[var numDevenv];\n* The 'Provider':               v#[var numProvider];\n* The 'vsSolutionBuildEvent':   v#[var numSBE];\n\nPackages:\n\n* NuGet 'vsSBE.CI.MSBuild': v#[var numCIM].#[var libCoreInt];\n\nDemo:\n\n* ClientDemo - [#[var branchSha1]][#[var netStamp]](#[var revBuild])\n\n------------------------------------------\n         Generated by vsSolutionBuildEvent\n------------------------------------------\n\nhttp://vssbe.r-eg.net\nhttp://vssbe.r-eg.net/Changelist/\nhttp://vssbe.r-eg.net/Downloads/\nhttp://visualstudiogallery.msdn.microsoft.com/0d1dbfd7-ed8a-40af-ae39-281bfeca2334/\n]",
        "Command__": [
          "#[File write(\"$(odir)\\Release_notes.txt\"):This assembled from:",
          "",
          "* Configuration:   '#[var cfgFull]' (Folders: #[var cfg])",
          "* .NET version:     #[var netVerString];",
          "* MSBuild Tools:    #[var msbuildver];",
          "* Build number:     #[var revBuild];",
          "* Branch Sha1:      #[var branchSha1];",
          "* Branch Name:      #[var branchName];",
          "* Branch revCount:  #[var branchRevCount];",
          "------------------------------------------",
          "",
          "Versions:",
          "",
          "* The 'Bridge':                 v#[var numBridge];",
          "* The 'CI.MSBuild':             v#[var numCIM];",
          "* The 'Devenv':                 v#[var numDevenv];",
          "* The 'Provider':               v#[var numProvider];",
          "* The 'vsSolutionBuildEvent':   v#[var numSBE];",
          "",
          "Packages:",
          "",
          "* NuGet 'vsSBE.CI.MSBuild': v#[var numCIM].#[var libCoreInt];",
          "",
          "Demo:",
          "",
          "* ClientDemo - [#[var branchSha1]][#[var netStamp]](#[var revBuild])",
          "",
          "------------------------------------------",
          "         Generated by vsSolutionBuildEvent",
          "------------------------------------------",
          "",
          "http://vssbe.r-eg.net",
          "http://vssbe.r-eg.net/Changelist/",
          "http://vssbe.r-eg.net/Downloads/",
          "http://visualstudiogallery.msdn.microsoft.com/0d1dbfd7-ed8a-40af-ae39-281bfeca2334/",
          "]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "PackBridge",
      "Caption": "Pack 'Bridge'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(pDirBridge)bin\\$(cfg)\\\\\", true)]\n#[7z pack.files({ \n            \"$(pDirBridge)bin\\$(cfg)\\Bridge.dll\", \n            \"$(pDirBridge)bin\\$(cfg)\\Bridge.pdb\",\n            \n#[( $(Configuration) ~= \"Release\" ) { \n            \"$(pDirBridge)bin\\$(cfg)\\Bridge.xml\",\n}]\n            \"$(pDirBridge)bin\\$(cfg)\\Release_notes.txt\" }, \"$(odir)Bridge_v$(numBridge)_[$(branchSha1)][$(netStamp)].zip\")]",
        "Command__": [
          "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(pDirBridge)bin\\$(cfg)\\\\\", true)]",
          "#[7z pack.files({ ",
          "            \"$(pDirBridge)bin\\$(cfg)\\Bridge.dll\", ",
          "            \"$(pDirBridge)bin\\$(cfg)\\Bridge.pdb\",",
          "            ",
          "#[( $(Configuration) ~= \"Release\" ) { ",
          "            \"$(pDirBridge)bin\\$(cfg)\\Bridge.xml\",",
          "}]",
          "            \"$(pDirBridge)bin\\$(cfg)\\Release_notes.txt\" }, \"$(odir)Bridge_v$(numBridge)_[$(branchSha1)][$(netStamp)].zip\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "PackProvider",
      "Caption": "Pack 'Provider'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(pDirProvider)bin\\$(cfg)\\\\\", true)]\n#[7z pack.files({\n            \"$(pDirProvider)bin\\$(cfg)\\Bridge.dll\", \n            \"$(pDirProvider)bin\\$(cfg)\\Bridge.pdb\",\n            \n#[( $(Configuration) ~= \"Release\" ) { \n            \"$(pDirProvider)bin\\$(cfg)\\Bridge.xml\",\n            \"$(pDirProvider)bin\\$(cfg)\\Provider.xml\",\n}]\n            \n            \"$(pDirProvider)bin\\$(cfg)\\Provider.dll\",\n            \"$(pDirProvider)bin\\$(cfg)\\Provider.pdb\",\n            \"$(pDirProvider)bin\\$(cfg)\\Release_notes.txt\" }, \"$(odir)Provider_v$(numProvider)_[$(branchSha1)][$(netStamp)].zip\")]",
        "Command__": [
          "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(pDirProvider)bin\\$(cfg)\\\\\", true)]",
          "#[7z pack.files({",
          "            \"$(pDirProvider)bin\\$(cfg)\\Bridge.dll\", ",
          "            \"$(pDirProvider)bin\\$(cfg)\\Bridge.pdb\",",
          "            ",
          "#[( $(Configuration) ~= \"Release\" ) { ",
          "            \"$(pDirProvider)bin\\$(cfg)\\Bridge.xml\",",
          "            \"$(pDirProvider)bin\\$(cfg)\\Provider.xml\",",
          "}]",
          "            ",
          "            \"$(pDirProvider)bin\\$(cfg)\\Provider.dll\",",
          "            \"$(pDirProvider)bin\\$(cfg)\\Provider.pdb\",",
          "            \"$(pDirProvider)bin\\$(cfg)\\Release_notes.txt\" }, \"$(odir)Provider_v$(numProvider)_[$(branchSha1)][$(netStamp)].zip\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "PackCIMSBuild",
      "Caption": "Pack 'CI.MSBuild'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(pDirCIM)bin\\$(cfg)\\\\\", true)]\n#[7z pack.files({\n            \"$(pDirCIM)bin\\$(cfg)\\Bridge.dll\", \n            \"$(pDirCIM)bin\\$(cfg)\\Bridge.pdb\",\n            \"$(pDirCIM)bin\\$(cfg)\\Provider.dll\",\n            \"$(pDirCIM)bin\\$(cfg)\\Provider.pdb\",\n            \n#[( $(Configuration) ~= \"Release\" ) { \n            \"$(pDirCIM)bin\\$(cfg)\\Bridge.xml\",\n            \"$(pDirCIM)bin\\$(cfg)\\Provider.xml\",\n            \"$(pDirCIM)bin\\$(cfg)\\CI.MSBuild.xml\",\n}]\n            \n            \"$(pDirCIM)bin\\$(cfg)\\CI.MSBuild.dll\",\n            \"$(pDirCIM)bin\\$(cfg)\\CI.MSBuild.pdb\",\n            \"$(pDirCIM)bin\\$(cfg)\\Release_notes.txt\"}, \"$(odir)CI.MSBuild_v$(numCIM)_[$(branchSha1)][$(netStamp)].zip\")]",
        "Command__": [
          "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(pDirCIM)bin\\$(cfg)\\\\\", true)]",
          "#[7z pack.files({",
          "            \"$(pDirCIM)bin\\$(cfg)\\Bridge.dll\", ",
          "            \"$(pDirCIM)bin\\$(cfg)\\Bridge.pdb\",",
          "            \"$(pDirCIM)bin\\$(cfg)\\Provider.dll\",",
          "            \"$(pDirCIM)bin\\$(cfg)\\Provider.pdb\",",
          "            ",
          "#[( $(Configuration) ~= \"Release\" ) { ",
          "            \"$(pDirCIM)bin\\$(cfg)\\Bridge.xml\",",
          "            \"$(pDirCIM)bin\\$(cfg)\\Provider.xml\",",
          "            \"$(pDirCIM)bin\\$(cfg)\\CI.MSBuild.xml\",",
          "}]",
          "            ",
          "            \"$(pDirCIM)bin\\$(cfg)\\CI.MSBuild.dll\",",
          "            \"$(pDirCIM)bin\\$(cfg)\\CI.MSBuild.pdb\",",
          "            \"$(pDirCIM)bin\\$(cfg)\\Release_notes.txt\"}, \"$(odir)CI.MSBuild_v$(numCIM)_[$(branchSha1)][$(netStamp)].zip\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "PackDevenv",
      "Caption": "Pack 'Devenv'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[var _DP = $(SolutionDir)$(pDirDevenv)bin\\#[var cfg]\\]\n\n#[IO delete.directory(\"$(_DP)Devenv\", true)]\n#[IO copy.directory(\"\", \"$(_DP)Devenv\", true)]\n\n#[IO copy.file(\"$(_DP)Bridge.*\", \"$(_DP)Devenv\\\\\", true)]\n#[IO copy.file(\"$(_DP)Provider.*\", \"$(_DP)Devenv\\\\\", true)]\n#[IO copy.file(\"$(_DP)Devenv.*\", \"$(_DP)Devenv\\\\\", true, {\"Devenv.AddIn\"})]\n\n#[( #[IO exists.file(\"$(_DP)Extensibility.dll\")] ) {\n    #[IO copy.file(\"$(_DP)Extensibility.dll\", \"$(_DP)\\Devenv\\\\\", true)]\n}]\n\n#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(_DP)Devenv\\\\\", true)]\n#[7z pack.files({\"$(_DP)Devenv.AddIn\", \"$(_DP)Devenv\\*.*\"}, \"$(odir)Devenv_v$(numDevenv)_[$(branchSha1)][$(netStamp)].zip\")]",
        "Command__": [
          "#[var _DP = $(SolutionDir)$(pDirDevenv)bin\\#[var cfg]\\]",
          "",
          "#[IO delete.directory(\"$(_DP)Devenv\", true)]",
          "#[IO copy.directory(\"\", \"$(_DP)Devenv\", true)]",
          "",
          "#[IO copy.file(\"$(_DP)Bridge.*\", \"$(_DP)Devenv\\\\\", true)]",
          "#[IO copy.file(\"$(_DP)Provider.*\", \"$(_DP)Devenv\\\\\", true)]",
          "#[IO copy.file(\"$(_DP)Devenv.*\", \"$(_DP)Devenv\\\\\", true, {\"Devenv.AddIn\"})]",
          "",
          "#[( #[IO exists.file(\"$(_DP)Extensibility.dll\")] ) {",
          "    #[IO copy.file(\"$(_DP)Extensibility.dll\", \"$(_DP)\\Devenv\\\\\", true)]",
          "}]",
          "",
          "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(_DP)Devenv\\\\\", true)]",
          "#[7z pack.files({\"$(_DP)Devenv.AddIn\", \"$(_DP)Devenv\\*.*\"}, \"$(odir)Devenv_v$(numDevenv)_[$(branchSha1)][$(netStamp)].zip\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "PackVSSBE",
      "Caption": "Pack 'vsSBE'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[IO copy.file(\"$(pDir)bin\\$(cfg)\\vsSolutionBuildEvent.vsix\", \"$(odir)vsSolutionBuildEvent_v$(numSBE)_[$(branchSha1)][$(netStamp)].vsix\", true)]",
        "Command__": [
          "#[IO copy.file(\"$(pDir)bin\\$(cfg)\\vsSolutionBuildEvent.vsix\", \"$(odir)vsSolutionBuildEvent_v$(numSBE)_[$(branchSha1)][$(netStamp)].vsix\", true)]"
        ]
      }
    },
    {
      "Enabled": false,
      "Name": "VerCIMPrompt",
      "Caption": "Gets next number for package from official nuget server",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": true,
      "ToConfiguration": [
        "Release_net45|Any CPU",
        "Release|Any CPU"
      ],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[($(Configuration) ~= \"Release\" && !$(Configuration) ~= \"CI_\") {\n    #[var numCIMPackage = $([MSBuild]::Add(#[File sout(\"cmd\", \"/C .nuget\\nuget.exe list vsSBE.CI.MSBuild | grep 'vsSBE.CI.MSBuild' | sed -r 's/^.*\\s[0-9]+\\.[0-9]+\\.//'\")], 1))]\n}\nelse{\n    #[var numCIMPackage = 0]\n}]",
        "Command__": [
          "#[($(Configuration) ~= \"Release\" && !$(Configuration) ~= \"CI_\") {",
          "    #[var numCIMPackage = $([MSBuild]::Add(#[File sout(\"cmd\", \"/C .nuget\\nuget.exe list vsSBE.CI.MSBuild | grep 'vsSBE.CI.MSBuild' | sed -r 's/^.*\\s[0-9]+\\.[0-9]+\\.//'\")], 1))]",
          "}",
          "else{",
          "    #[var numCIMPackage = 0]",
          "}]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "NuGetCIM",
      "Caption": "NuGet pack - CI.MSBuild",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[var tplNuspec = #[File get(\"vsSBE.CI.MSBuild.nuspec.tpl\")]]\n#[var nupCIMdir = $(odir)NuGet-CI.MSBuild-package]\n\n#[IO delete.directory(\"$(nupCIMdir)\", true)]\n#[IO copy.directory(\"\", \"$(nupCIMdir)\", true)]\n\n#[var nuspec = $(tplNuspec.Replace(\"%CIM%\", \"$(numCIM)\").Replace(\"%Lib%\", \"$(libCoreInt)\").Replace(\"%vsSBE%\", \"$(numSBE)\"))]\n#[File write(\"$(nupCIMdir)\\vsSBE.CI.MSBuild.nuspec\"):#[var nuspec]]\n\n#[\" files for package \"]\n\n#[IO copy.file(\"$(CIMLib)\\*.dll\", \"$(nupCIMdir)\\bin\\\\\", true)]#[\" CIMLib custom \"]\n\n#[\" vsix dir \"]\n#[IO copy.file(\"$(pDir)bin/$(cfg)\\*.dll\", \"$(nupCIMdir)\\bin\\\\\", true)]\n#[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\*.dll\", \"$(nupCIMdir)\\bin\\\\\", true)]\n#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(nupCIMdir)\\bin\\\\\", true)]\n#[IO copy.file(\"3rd-party\", \"$(nupCIMdir)\\bin\\\\\", true)]\n#[IO copy.file(\"changelog.txt\", \"$(nupCIMdir)\\bin\\\\\", true)]\n#[IO copy.file(\"LICENSE\", \"$(nupCIMdir)\\bin\\\\\", true)]\n#[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\*.bat\", \"$(nupCIMdir)\\bin\\\\\", true)]\n\n#[\" xml doc \"]\n#[( $(Configuration) ~= \"Release\" )\n{\n    #[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\Bridge.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]\n    #[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\Provider.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]\n    #[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\CI.MSBuild.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]\n    #[IO copy.file(\"$(pDir)bin/$(cfg)\\vsSolutionBuildEvent.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]\n}]\n\n#[NuGet gnt.raw(\"gnt.core /t:pack /p:ngin=\\\"$(nupCIMdir)\\\" /p:ngout=\\\"$(odir)\\\"\")]\n#[IO delete.directory(\"$(nupCIMdir)\", true)]",
        "Command__": [
          "#[var tplNuspec = #[File get(\"vsSBE.CI.MSBuild.nuspec.tpl\")]]",
          "#[var nupCIMdir = $(odir)NuGet-CI.MSBuild-package]",
          "",
          "#[IO delete.directory(\"$(nupCIMdir)\", true)]",
          "#[IO copy.directory(\"\", \"$(nupCIMdir)\", true)]",
          "",
          "#[var nuspec = $(tplNuspec.Replace(\"%CIM%\", \"$(numCIM)\").Replace(\"%Lib%\", \"$(libCoreInt)\").Replace(\"%vsSBE%\", \"$(numSBE)\"))]",
          "#[File write(\"$(nupCIMdir)\\vsSBE.CI.MSBuild.nuspec\"):#[var nuspec]]",
          "",
          "#[\" files for package \"]",
          "",
          "#[IO copy.file(\"$(CIMLib)\\*.dll\", \"$(nupCIMdir)\\bin\\\\\", true)]#[\" CIMLib custom \"]",
          "",
          "#[\" vsix dir \"]",
          "#[IO copy.file(\"$(pDir)bin/$(cfg)\\*.dll\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "#[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\*.dll\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "#[IO copy.file(\"$(odir)\\Release_notes.txt\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "#[IO copy.file(\"3rd-party\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "#[IO copy.file(\"changelog.txt\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "#[IO copy.file(\"LICENSE\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "#[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\*.bat\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "",
          "#[\" xml doc \"]",
          "#[( $(Configuration) ~= \"Release\" )",
          "{",
          "    #[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\Bridge.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "    #[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\Provider.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "    #[IO copy.file(\"$(pDirCIM)bin/$(cfg)\\CI.MSBuild.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "    #[IO copy.file(\"$(pDir)bin/$(cfg)\\vsSolutionBuildEvent.xml\", \"$(nupCIMdir)\\bin\\\\\", true)]",
          "}]",
          "",
          "#[NuGet gnt.raw(\"gnt.core /t:pack /p:ngin=\\\"$(nupCIMdir)\\\" /p:ngout=\\\"$(odir)\\\"\")]",
          "#[IO delete.directory(\"$(nupCIMdir)\", true)]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "PackClientDemo",
      "Caption": "Pack 'ClientDemo'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": true,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[var clientDemoDir = ClientDemo\\bin\\#[var cfg]\\]\n#[7z pack.files({\n            \"$(clientDemoDir)Bridge.dll\", \n            \"$(clientDemoDir)Bridge.pdb\",\n            \"$(clientDemoDir)client.vssbe.dll\",\n            \"$(clientDemoDir)client.vssbe.pdb\"}, \"$(odir)ClientDemo_[$(branchSha1)][$(netStamp)]($(revBuild)).zip\")]",
        "Command__": [
          "#[var clientDemoDir = ClientDemo\\bin\\#[var cfg]\\]",
          "#[7z pack.files({",
          "            \"$(clientDemoDir)Bridge.dll\", ",
          "            \"$(clientDemoDir)Bridge.pdb\",",
          "            \"$(clientDemoDir)client.vssbe.dll\",",
          "            \"$(clientDemoDir)client.vssbe.pdb\"}, \"$(odir)ClientDemo_[$(branchSha1)][$(netStamp)]($(revBuild)).zip\")]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "GetterCIM",
      "Caption": "Generate getter of CIM package",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[$(getcimName = 'get.CIM.bat')]\r\n#[IO copy.file(\"$(SolutionDir)\\tools\\gnt.bat\", \"$(odir)\\get.CIM.bat\", true)]\r\n\r\n#[File replace(\"$(odir)\\get.CIM.bat\", \"%tgnt% %*\", \"%tgnt% /p:ngpackages=\\\"vsSBE.CI.MSBuild\\\" %*\")]",
        "Command__": [
          "#[$(getcimName = 'get.CIM.bat')]",
          "#[IO copy.file(\"$(SolutionDir)\\tools\\gnt.bat\", \"$(odir)\\get.CIM.bat\", true)]",
          "",
          "#[File replace(\"$(odir)\\get.CIM.bat\", \"%tgnt% %*\", \"%tgnt% /p:ngpackages=\\\"vsSBE.CI.MSBuild\\\" %*\")]"
        ]
      }
    }
  ],
  "CancelBuild": [],
  "WarningsBuild": [],
  "ErrorsBuild": [],
  "OWPBuild": [],
  "Transmitter": [],
  "CommandEvent": [],
  "Logging": [],
  "SlnOpened": [],
  "SlnClosed": []
}