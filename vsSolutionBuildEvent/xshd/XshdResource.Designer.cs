//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.r_eg.vsSBE.xshd {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class XshdResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal XshdResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("net.r_eg.vsSBE.xshd.XshdResource", typeof(XshdResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!-- 
        ///     https://github.com/icsharpcode/SharpDevelop/blob/5c45af5/src/Libraries/AvalonEdit/ICSharpCode.AvalonEdit/Highlighting/Resources/CPP-Mode.xshd
        ///  --&gt;
        ///
        ///&lt;!-- syntaxdefinition for C/C++ 2001 by Andrea Paatz and Mike Krueger --&gt;
        ///&lt;!-- converted to AvalonEdit format by Siegfried Pammer in 2010 --&gt;
        ///&lt;SyntaxDefinition name=&quot;C++&quot; extensions=&quot;.c;.h;.cc;.cpp;.hpp&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///	&lt;Color name=&quot;Comment&quot; foreground=&quot;Green&quot; /&gt;
        ///	&lt;Col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CppLang {
            get {
                return ResourceManager.GetString("CppLang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!-- 
        ///     https://github.com/icsharpcode/SharpDevelop/blob/354b7a4/src/Libraries/AvalonEdit/ICSharpCode.AvalonEdit/Highlighting/Resources/CSharp-Mode.xshd
        ///  --&gt;
        ///     
        ///&lt;SyntaxDefinition name=&quot;C#&quot; extensions=&quot;.cs&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;!-- The named colors &apos;Comment&apos; and &apos;String&apos; are used in SharpDevelop to detect if a line is inside a multiline string/comment --&gt;
        ///    &lt;Color name=&quot;Comment&quot; foreground=&quot;Green&quot; exampleText=&quot;// comment [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CSharpLang {
            get {
                return ResourceManager.GetString("CSharpLang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;SyntaxDefinition name=&quot;&quot; extensions=&quot;&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;Color name=&quot;Punctuation&quot; foreground=&quot;DarkSlateGray&quot; /&gt;
        ///    &lt;Color name=&quot;Digits&quot; foreground=&quot;DarkBlue&quot; /&gt;
        ///    
        ///    &lt;RuleSet ignoreCase=&quot;false&quot;&gt;  
        ///            
        ///        &lt;Rule color=&quot;Punctuation&quot;&gt;
        ///            [.()\[\]{}\/!]+
        ///        &lt;/Rule&gt;        
        ///        
        ///        &lt;Rule color=&quot;Digits&quot;&gt;
        ///            [0-9]+
        ///        &lt;/Rule&gt;        
        ///        
        ///    &lt;/RuleSet&gt;
        ///&lt;/SyntaxDef [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FilesMode {
            get {
                return ResourceManager.GetString("FilesMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;SyntaxDefinition name=&quot;&quot; extensions=&quot;&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;Color name=&quot;KeyWords&quot; foreground=&quot;	DarkBlue&quot; /&gt;
        ///    &lt;Color name=&quot;Punctuation&quot; foreground=&quot;DarkSlateGray&quot; /&gt;
        ///    &lt;Color name=&quot;MSBuildPunctuation&quot; foreground=&quot;Indigo&quot; /&gt;
        ///    &lt;Color name=&quot;Digits&quot; foreground=&quot;DarkBlue&quot; /&gt;
        ///    &lt;Color name=&quot;String&quot; foreground=&quot;Sienna&quot; /&gt;
        ///    &lt;Color name=&quot;Literals&quot; foreground=&quot;Blue&quot; /&gt;
        ///    
        ///    &lt;RuleSet ignoreCase=&quot;false&quot;&gt;    
        ///        &lt;Key [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InterpreterMode {
            get {
                return ResourceManager.GetString("InterpreterMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!-- 
        ///     https://github.com/icsharpcode/SharpDevelop/blob/354b7a4/src/Libraries/AvalonEdit/ICSharpCode.AvalonEdit/Highlighting/Resources/XmlDoc.xshd
        ///  --&gt;
        ///
        ///&lt;SyntaxDefinition name=&quot;XML&quot; extensions=&quot;.xml;.xsl;.xslt;.xsd;.manifest;.config;.addin;.xshd;.wxs;.wxi;.wxl;.proj;.csproj;.vbproj;.ilproj;.booproj;.build;.xfrm;.targets;.xaml;.xpt;.xft;.map;.wsdl;.disco;.ps1xml;.nuspec&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;Color foreground=&quot;Green&quot; name=&quot;Com [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MSBuildTargets {
            get {
                return ResourceManager.GetString("MSBuildTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;SyntaxDefinition name=&quot;&quot; extensions=&quot;&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;Color name=&quot;Punctuation&quot; foreground=&quot;DarkSlateGray&quot; /&gt;
        ///    &lt;Color name=&quot;Digits&quot; foreground=&quot;DarkBlue&quot; /&gt;
        ///    &lt;Color name=&quot;String&quot; foreground=&quot;Sienna&quot; /&gt;
        ///    &lt;Color name=&quot;Literals&quot; foreground=&quot;Blue&quot; /&gt;
        ///    
        ///    &lt;RuleSet ignoreCase=&quot;false&quot;&gt; 
        ///        
        ///        &lt;Rule color=&quot;Punctuation&quot;&gt;
        ///            [?,.;()\[\]{}+\-/%*&amp;lt;&amp;gt;^+~!|&amp;amp;]+
        ///        &lt;/Rule&gt;
        ///               [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OperationMode {
            get {
                return ResourceManager.GetString("OperationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;SyntaxDefinition name=&quot;&quot; extensions=&quot;&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;Color name=&quot;Components&quot; foreground=&quot;DarkCyan&quot; exampleText=&quot;#[Build &quot; /&gt;
        ///    &lt;Color name=&quot;Punctuation&quot; foreground=&quot;DarkSlateGray&quot; /&gt;
        ///    &lt;Color name=&quot;MSBuildPunctuation&quot; foreground=&quot;Indigo&quot; /&gt;
        ///    &lt;Color name=&quot;Digits&quot; foreground=&quot;DarkBlue&quot; /&gt;
        ///    &lt;Color name=&quot;String&quot; foreground=&quot;Sienna&quot; /&gt;
        ///    &lt;Color name=&quot;Comment&quot; foreground=&quot;Gray&quot; /&gt;
        ///    &lt;Color name=&quot;SysConst&quot; fontWe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SBEScripts {
            get {
                return ResourceManager.GetString("SBEScripts", resourceCulture);
            }
        }
    }
}
