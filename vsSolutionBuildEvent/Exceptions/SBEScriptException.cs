/* 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Copyright (c) 2013-2014 Developed by reg [Denis Kuzmin] <entry.reg@gmail.com>
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE. 
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace net.r_eg.vsSBE.Exceptions
{
    public class SBEScriptException: SBEException
    {
        public SBEScriptException(string message): base(message) {}
        public SBEScriptException(string message, params object[] args): base(message, args) {}
    }

    public class SelectorMismatchException: SBEScriptException
    {
        public SelectorMismatchException(string message): base(message) {}
        public SelectorMismatchException(string message, params object[] args): base(message, args) {}
    }

    public class SyntaxIncorrectException: SBEScriptException
    {
        public SyntaxIncorrectException(string message): base(message) {}
        public SyntaxIncorrectException(string message, params object[] args): base(message, args) {}
    }

    public class SubtypeNotFoundException: SBEScriptException
    {
        public SubtypeNotFoundException(string message): base(message) {}
        public SubtypeNotFoundException(string message, params object[] args): base(message, args) {}
    }

    public class TermNotFoundException: SBEScriptException
    {
        public TermNotFoundException(string message): base(message) {}
        public TermNotFoundException(string message, params object[] args): base(message, args) {}
    }

    public class NotSupportedOperationException: SBEScriptException
    {
        public NotSupportedOperationException(string message): base(message) {}
        public NotSupportedOperationException(string message, params object[] args): base(message, args) {}
    }
}
