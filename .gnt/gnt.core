<!-- GetNuTool - github.com/3F/GetNuTool --><!-- Copyright (c) 2015-2018  Denis Kuzmin [ entry.reg@gmail.com ] --><Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ngconfig Condition="'$(ngconfig)'==''">packages.config</ngconfig><ngserver Condition="'$(ngserver)'==''">https://www.nuget.org/api/v2/package/</ngserver><ngpackages Condition="'$(ngpackages)'==''"></ngpackages><ngpath Condition="'$(ngpath)'==''">packages</ngpath></PropertyGroup><Target Name="get" BeforeTargets="Build" DependsOnTargets="header"><a><Output PropertyName="plist" TaskParameter="Result"/></a><b plist="$(plist)"/></Target><Target Name="pack" DependsOnTargets="header"><c/></Target><PropertyGroup><TaskCoreDllPath Condition="Exists('$(MSBuildToolsPath)\Microsoft.Build.Tasks.v$(MSBuildToolsVersion).dll')">$(MSBuildToolsPath)\Microsoft.Build.Tasks.v$(MSBuildToolsVersion).dll</TaskCoreDllPath><TaskCoreDllPath Condition="'$(TaskCoreDllPath)'=='' and Exists('$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll')">$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll</TaskCoreDllPath></PropertyGroup><UsingTask TaskName="a" TaskFactory="CodeTaskFactory" AssemblyFile="$(TaskCoreDllPath)"><ParameterGroup><Result Output="true"/></ParameterGroup><Task><Reference Include="System.Xml"/><Reference Include="System.Xml.Linq"/><Using Namespace="System"/><Using Namespace="System.Collections.Generic"/><Using Namespace="System.IO"/><Using Namespace="System.Xml.Linq"/><Code Type="Fragment" Language="cs"><![CDATA[var a=@"$(ngconfig)";var b=@"$(ngpackages)";var c=@"$(wpath)";if(!String.IsNullOrEmpty(b)){Result=b;return true;}var d=Console.Error;Action<string,Queue<string>>e=delegate(string f,Queue<string>g){foreach(var h in XDocument.Load(f).Descendants("package")){var i=h.Attribute("id");var j=h.Attribute("version");var k=h.Attribute("output");if(i==null){d.WriteLine("'id' does not exist in '{0}'",f);return;}var l=i.Value;if(j!=null){l+="/"+j.Value;}if(k!=null){g.Enqueue(l+":"+k.Value);continue;}g.Enqueue(l);}};var m=new Queue<string>();foreach(var f in a.Split(new char[]{a.IndexOf('|')!=-1?'|':';'},(StringSplitOptions)1)){var n=Path.Combine(c,f);if(File.Exists(n)){e(n,m);}else{d.WriteLine(".config '{0}' was not found.",n);}}if(m.Count<1){d.WriteLine("Empty list. Use .config or /p:ngpackages=\"...\"\n");}else{Result=string.Join("|",m.ToArray());}]]></Code></Task></UsingTask><UsingTask TaskName="b" TaskFactory="CodeTaskFactory" AssemblyFile="$(TaskCoreDllPath)"><ParameterGroup><plist/></ParameterGroup><Task><Reference Include="WindowsBase"/><Using Namespace="System"/><Using Namespace="System.IO"/><Using Namespace="System.IO.Packaging"/><Using Namespace="System.Net"/><Code Type="Fragment" Language="cs"><![CDATA[var a=@"$(ngserver)";var b=@"$(wpath)";var c=@"$(ngpath)";var d=@"$(proxycfg)";var e=@"$(debug)"=="true";if(plist==null){return false;}ServicePointManager.SecurityProtocol|=SecurityProtocolType.Tls11|SecurityProtocolType.Tls12;var f=new string[]{"/_rels/","/package/","/[Content_Types].xml"};Action<string,object>g=delegate(string h,object i){if(e){Console.WriteLine(h,i);}};Func<string,WebProxy>j=delegate(string k){var l=k.Split('@');if(l.Length<=1){return new WebProxy(l[0],false);}var m=l[0].Split(':');return new WebProxy(l[1],false){Credentials=new NetworkCredential(m[0],(m.Length>1)?m[1]:null)};};Func<string,string>n=delegate(string i){return Path.Combine(b,i??"");};Action<string,string,string>o=delegate(string p,string q,string r){var s=Path.GetFullPath(n(r??q));if(Directory.Exists(s)){Console.WriteLine("`{0}` is already exists: \"{1}\"",q,s);return;}Console.Write("Getting `{0}` ... ",p);var t=Path.Combine(Path.GetTempPath(),Guid.NewGuid().ToString());using(var u=new WebClient()){try{if(!String.IsNullOrEmpty(d)){u.Proxy=j(d);}u.Headers.Add("User-Agent","GetNuTool $(GetNuTool)");u.UseDefaultCredentials=true;u.DownloadFile(a+p,t);}catch(Exception v){Console.Error.WriteLine(v.Message);return;}}Console.WriteLine("Extracting into \"{0}\"",s);using(var w=ZipPackage.Open(t,FileMode.Open,FileAccess.Read)){foreach(var x in w.GetParts()){var y=Uri.UnescapeDataString(x.Uri.OriginalString);if(f.Any(z=>y.StartsWith(z,StringComparison.Ordinal))){continue;}var _=Path.Combine(s,y.TrimStart('/'));g("- `{0}`",y);var aa=Path.GetDirectoryName(_);if(!Directory.Exists(aa)){Directory.CreateDirectory(aa);}using(Stream ab=x.GetStream(FileMode.Open,FileAccess.Read))using(var ac=File.OpenWrite(_)){try{ab.CopyTo(ac);}catch(FileFormatException v){g("[x]?crc: {0}",_);}}}}File.Delete(t);};foreach(var w in plist.Split(new char[]{plist.IndexOf('|')!=-1?'|':';'},(StringSplitOptions)1)){var ad=w.Split(new char[]{':'},2);var p=ad[0];var r=(ad.Length>1)?ad[1]:null;var q=p.Replace('/','.');if(!String.IsNullOrEmpty(c)){r=Path.Combine(c,r??q);}o(p,q,r);}]]></Code></Task></UsingTask><UsingTask TaskName="c" TaskFactory="CodeTaskFactory" AssemblyFile="$(TaskCoreDllPath)"><Task><Reference Include="System.Xml"/><Reference Include="System.Xml.Linq"/><Reference Include="WindowsBase"/><Using Namespace="System"/><Using Namespace="System.Collections.Generic"/><Using Namespace="System.IO"/><Using Namespace="System.Linq"/><Using Namespace="System.IO.Packaging"/><Using Namespace="System.Xml.Linq"/><Using Namespace="System.Text.RegularExpressions"/><Code Type="Fragment" Language="cs"><![CDATA[var a=@"$(ngin)";var b=@"$(ngout)";var c=@"$(wpath)";var d=@"$(debug)"=="true";var EXT_NUSPEC=".nuspec";var EXT_NUPKG=".nupkg";var TAG_META="metadata";var DEF_CONTENT_TYPE="application/octet";var MANIFEST_URL="http://schemas.microsoft.com/packaging/2010/07/manifest";var ID="id";var VER="version";Action<string,object>e=delegate(string f,object g){if(d){Console.WriteLine(f,g);}};var h=Console.Error;a=Path.Combine(c,a);if(!Directory.Exists(a)){h.WriteLine("`{0}` was not found.",a);return false;}b=Path.Combine(c,b);var i=Directory.GetFiles(a,"*"+EXT_NUSPEC,SearchOption.TopDirectoryOnly).FirstOrDefault();if(i==null){h.WriteLine("{0} was not found in `{1}`",EXT_NUSPEC,a);return false;}Console.WriteLine("Found {0}: `{1}`",EXT_NUSPEC,i);var j=XDocument.Load(i).Root.Elements().FirstOrDefault(k=>k.Name.LocalName==TAG_META);if(j==null){h.WriteLine("{0} does not contain {1}.",i,TAG_META);return false;}var l=new Dictionary<string,string>();foreach(var m in j.Elements()){l[m.Name.LocalName.ToLower()]=m.Value;}if(l[ID].Length>100||!Regex.IsMatch(l[ID],@"^\w+([_.-]\w+)*$",RegexOptions.IgnoreCase|RegexOptions.ExplicitCapture)){h.WriteLine("The format of `{0}` is not correct.",ID);return false;}var n=new string[]{Path.Combine(a,"_rels"),Path.Combine(a,"package"),Path.Combine(a,"[Content_Types].xml")};var o=string.Format("{0}.{1}{2}",l[ID],l[VER],EXT_NUPKG);if(!String.IsNullOrWhiteSpace(b)){if(!Directory.Exists(b)){Directory.CreateDirectory(b);}o=Path.Combine(b,o);}Console.WriteLine("Started packing `{0}` ...",o);using(var p=Package.Open(o,FileMode.Create)){Uri q=new Uri(String.Format("/{0}{1}",l[ID],EXT_NUSPEC),UriKind.Relative);p.CreateRelationship(q,TargetMode.Internal,MANIFEST_URL);foreach(var r in Directory.GetFiles(a,"*.*",SearchOption.AllDirectories)){if(n.Any(k=>r.StartsWith(k,StringComparison.Ordinal))){continue;}string s;if(r.StartsWith(a,StringComparison.OrdinalIgnoreCase)){s=r.Substring(a.Length).TrimStart(Path.DirectorySeparatorChar);}else{s=r;}e("- `{0}`",s);var t=string.Join("/",s.Split('\\','/').Select(g=>Uri.EscapeDataString(g)));Uri u=PackUriHelper.CreatePartUri(new Uri(t,UriKind.Relative));var v=p.CreatePart(u,DEF_CONTENT_TYPE,CompressionOption.Maximum);using(Stream w=v.GetStream())using(var x=new FileStream(r,FileMode.Open,FileAccess.Read)){x.CopyTo(w);}}Func<string,string>y=delegate(string z){return(l.ContainsKey(z))?l[z]:"";};var _=p.PackageProperties;_.Creator=y("authors");_.Description=y("description");_.Identifier=l[ID];_.Version=l[VER];_.Keywords=y("tags");_.Title=y("title");_.LastModifiedBy="GetNuTool $(GetNuTool)";}]]></Code></Task></UsingTask><Target Name="Build" DependsOnTargets="get"/><PropertyGroup><GetNuTool>1.7.0.7737_4bc1dfb</GetNuTool><wpath Condition="'$(wpath)'==''">$(MSBuildProjectDirectory)</wpath></PropertyGroup><Target Name="header"><Message Text="%0D%0AGetNuTool $(GetNuTool) - github.com/3F%0D%0A=========%0D%0A" Importance="high"/></Target></Project>